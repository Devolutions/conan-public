From b8a2b774ecdd3f36b9e253f894b19f84c7d854a6 Mon Sep 17 00:00:00 2001
From: =?UTF-8?q?Marc-Andr=C3=A9=20Moreau?= <mamoreau@devolutions.net>
Date: Fri, 22 Dec 2023 10:21:52 -0500
Subject: [PATCH] add support for MBEDTLS_SSL_VERIFY_EXTERNAL authmode

---
 include/mbedtls/ssl.h |  5 +++++
 library/ssl_tls.c     | 13 +++++++++++++
 2 files changed, 18 insertions(+)

diff --git a/include/mbedtls/ssl.h b/include/mbedtls/ssl.h
index 89f7b8164..57416912a 100644
--- a/include/mbedtls/ssl.h
+++ b/include/mbedtls/ssl.h
@@ -290,6 +290,7 @@
 #define MBEDTLS_SSL_VERIFY_OPTIONAL             1
 #define MBEDTLS_SSL_VERIFY_REQUIRED             2
 #define MBEDTLS_SSL_VERIFY_UNSET                3 /* Used only for sni_authmode */
+#define MBEDTLS_SSL_VERIFY_EXTERNAL             4
 
 #define MBEDTLS_SSL_LEGACY_RENEGOTIATION        0
 #define MBEDTLS_SSL_SECURE_RENEGOTIATION        1
@@ -1971,6 +1972,10 @@ void mbedtls_ssl_conf_transport(mbedtls_ssl_config *conf, int transport);
  *  MBEDTLS_SSL_VERIFY_REQUIRED:  peer *must* present a valid certificate,
  *                        handshake is aborted if verification failed.
  *                        (default on client)
+ * 
+ *  MBEDTLS_SSL_VERIFY_EXTERNAL:  external certificate validation mode,
+ *                        a verification callback *must* be registered using
+ *                        mbedtls_ssl_conf_verify() or mbedtls_ssl_set_verify().
  *
  * \note On client, MBEDTLS_SSL_VERIFY_REQUIRED is the recommended mode.
  * With MBEDTLS_SSL_VERIFY_OPTIONAL, the user needs to call mbedtls_ssl_get_verify_result() at
diff --git a/library/ssl_tls.c b/library/ssl_tls.c
index cfb279818..a89271580 100644
--- a/library/ssl_tls.c
+++ b/library/ssl_tls.c
@@ -7279,6 +7279,19 @@ static int ssl_parse_certificate_verify(mbedtls_ssl_context *ssl,
         p_vrfy = ssl->conf->p_vrfy;
     }
 
+    if (authmode == MBEDTLS_SSL_VERIFY_EXTERNAL) {
+        if (f_vrfy == NULL) {
+            MBEDTLS_SSL_DEBUG_MSG(1, ("No callback registered for external verification mode"));
+            return MBEDTLS_ERR_SSL_INTERNAL_ERROR;
+        }
+        MBEDTLS_SSL_DEBUG_MSG(3, ("Use callback for external verification"));
+        ret = f_vrfy(p_vrfy, ssl->session_negotiate->peer_cert, -1, &ssl->session_negotiate->verify_result);
+        if (ret != 0) {
+            MBEDTLS_SSL_DEBUG_RET(1, "x509_verify_cert", ret);
+        }
+        return ret;
+    }
+
     /*
      * Main check: verify certificate
      */
-- 
2.25.1

