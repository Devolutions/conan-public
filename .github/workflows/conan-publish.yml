name: conan publish
on:
  workflow_dispatch:
    inputs:
      runId:
        description: 'run id'
        default: "1283642364"
        required: true
  workflow_call:
    secrets:
      ARTIFACTORY_CONAN_USERNAME:
        required: true
      ARTIFACTORY_CONAN_PASSWORD:
        required: true

env:
   conan-version: 1.60.0

concurrency: conan-publish
jobs:
  publish:
    runs-on: ubuntu-latest
    environment: artifactory-publish
    strategy:
      max-parallel: 1
      matrix:
        os: [ windows, macos, linux, ios, android ]

    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v3

      - name: Configure runner
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' 

      - name: Configure runner
        run: |
          sudo apt update
          sudo apt install python3 python3-pip python3-wget python3-setuptools
          pip3 install conan==${{ env.conan-version }} invoke Jinja2 urllib3 chardet requests --upgrade
          echo "CONAN_USER_HOME=/tmp" >> $GITHUB_ENV

      - name: Configure conan environment
        run: |
          conan config init
          conan config install ./settings

      - name: Download conan data
        uses: actions/download-artifact@v3
        if: github.event.inputs.runId == ''
        with:
          path: download

      - name: Download conan data
        working-directory: download
        if: github.event.inputs.runId != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh run download ${{ github.event.inputs.runId }}

      - name: Trim downloaded data
        working-directory: download
        shell: pwsh
        run: Get-ChildItem | Where-Object { !$_.FullName.Contains('${{ matrix.os }}') } | Remove-Item -Recurse

      - name: Publish packages
        working-directory: download
        env:
          CONAN_NON_INTERACTIVE: 1
          CONAN_REMOTE_NAME: "artifactory"
          CONAN_REMOTE_URL: "https://devolutions.jfrog.io/devolutions/api/conan/conan-local"
          CONAN_LOGIN_USERNAME: ${{ secrets.ARTIFACTORY_CONAN_USERNAME }}
          CONAN_PASSWORD: ${{ secrets.ARTIFACTORY_CONAN_PASSWORD }}
        run: |
          pwsh ../publish.ps1
