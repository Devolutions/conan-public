name: conan packages
on: workflow_dispatch
jobs:
  build:
    name: conan packages [${{matrix.arch}}-${{matrix.os}}]
    runs-on: ${{matrix.runner}}
    strategy:
      fail-fast: false
      matrix:
        arch: [ x86, x86_64, arm, aarch64 ]
        os: [ windows, macos, linux, ios, android ]

        exclude:
          - arch: x86
            os: macos
          - arch: x86
            os: linux
          - arch: x86
            os: ios
          - arch: arm
            os: windows
          - arch: arm
            os: macos
          - arch: arm
            os: linux

        include:
          - os: windows
            runner: windows-2019
          - os: macos
            runner: macos-10.15
          - os: linux
            runner: ubuntu-18.04
          - os: ios
            runner: macos-10.15
          - os: android
            runner: ubuntu-18.04
            
    steps:
      - name: Check out ${{ github.repository }}
        uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
        if: runner.os == 'Linux'

      - name: Set up docker buildx
        uses: docker/setup-buildx-action@v1
        if: runner.os == 'Linux'

      - name: Configure Windows runner
        if: runner.os == 'Windows'
        run: |
          choco install --no-progress ninja
          choco install --no-progress cmake
          choco install --no-progress 7zip
          choco install --no-progress python
          choco install --no-progress vswhere
          choco install --no-progress nasm yasm
          pip install conan==1.39.0 conan_package_tools==0.35.1 invoke Jinja2 pywin32 --upgrade
          iex "& { $(irm https://aka.ms/install-powershell.ps1) } -UseMSI -Quiet"

      - name: Configure macOS runner
        if: runner.os == 'macOS'
        env:
          CMAKE_OSX_DEPLOYMENT_TARGET: "10.12"
        run: |
          brew install ninja
          brew install cmake
          brew install python
          brew install nasm yasm
          pip3 install conan==1.39.0 conan_package_tools==0.35.1 invoke Jinja2 --upgrade
          brew install --cask powershell
          echo "CONAN_USER_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Configure Linux runner
        if: runner.os == 'Linux'
        run: |
          sudo apt update
          sudo apt install ninja-build
          sudo apt install cmake
          sudo apt install xz-utils
          sudo apt install nasm yasm
          sudo apt install python3 python3-pip python3-wget python3-setuptools
          pip3 install conan==1.39.0 conan_package_tools==0.35.1 invoke Jinja2 --upgrade
          bash <(wget -qO - https://aka.ms/install-powershell.sh)
          echo "CONAN_USER_HOME=$GITHUB_WORKSPACE" >> $GITHUB_ENV

      - name: Configure Android NDK
        if: runner.os == 'Linux'
        run: |
          wget -q https://dl.google.com/android/repository/android-ndk-r21e-linux-x86_64.zip
          unzip android-ndk-r21e-linux-x86_64.zip -d /tmp
          sudo mv /tmp/android-ndk-r21e /opt/android-ndk
          echo "ANDROID_NDK=/opt/android-ndk" >> $GITHUB_ENV

      - name: Configure conan environment
        run: |
          conan config init
          conan config install ./settings

      - name: Build conan packages
        run: |
          pwsh build.ps1 -Platform ${{matrix.os}} -Architecture ${{matrix.arch}}
